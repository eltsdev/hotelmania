// file: HotelmaniaOntology.java generated by ontology bean generator.  DO NOT EDIT, UNLESS YOU ARE REALLY SURE WHAT YOU ARE DOING!
package emse.hotelmania.ontology;

import jade.content.onto.*;
import jade.content.schema.*;
import jade.util.leap.HashMap;
import jade.content.lang.Codec;
import jade.core.CaseInsensitiveString;

/** file: HotelmaniaOntology.java
 * @author ontology bean generator
 * @version 2014/04/8, 19:26:06
 */
public class HotelmaniaOntology extends jade.content.onto.Ontology  {
  //NAME
  public static final String ONTOLOGY_NAME = "hotelmania";
  // The singleton instance of this ontology
  private static ReflectiveIntrospector introspect = new ReflectiveIntrospector();
  private static Ontology theInstance = new HotelmaniaOntology();
  public static Ontology getInstance() {
     return theInstance;
  }


   // VOCABULARY
    public static final String HOTELEXIST_EXIST="exist";
    public static final String HOTELEXIST="HotelExist";
    public static final String REGISTERHOTEL_HOTELNAME="HotelName";
    public static final String REGISTERHOTEL="RegisterHotel";

  /**
   * Constructor
  */
  private HotelmaniaOntology(){ 
    super(ONTOLOGY_NAME, BasicOntology.getInstance());
    try { 

    // adding Concept(s)

    // adding AgentAction(s)
    AgentActionSchema registerHotelSchema = new AgentActionSchema(REGISTERHOTEL);
    add(registerHotelSchema, emse.hotelmania.ontology.RegisterHotel.class);

    // adding AID(s)

    // adding Predicate(s)
    PredicateSchema hotelExistSchema = new PredicateSchema(HOTELEXIST);
    add(hotelExistSchema, emse.hotelmania.ontology.HotelExist.class);


    // adding fields
    registerHotelSchema.add(REGISTERHOTEL_HOTELNAME, (TermSchema)getSchema(BasicOntology.STRING), ObjectSchema.OPTIONAL);
    hotelExistSchema.add(HOTELEXIST_EXIST, (TermSchema)getSchema(BasicOntology.BOOLEAN), ObjectSchema.MANDATORY);

    // adding name mappings

    // adding inheritance

   }catch (java.lang.Exception e) {e.printStackTrace();}
  }
  }
