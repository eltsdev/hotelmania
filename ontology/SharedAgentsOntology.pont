; Sat Jun 07 20:28:14 CEST 2014
; 
;+ (version "3.4.8")
;+ (build "Build 629")


(defclass %3ACLIPS_TOP_LEVEL_SLOT_CLASS "Fake class to save top-level slot information"
	(is-a USER)
	(role abstract)
	(single-slot checkOut
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot account
		(type INSTANCE)
;+		(allowed-classes Account)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot room_service_staff
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ASUPPORT
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract
		(type INSTANCE)
;+		(allowed-classes Contract)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot price
		(type INSTANCE)
;+		(allowed-classes Price)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3APACKAGE
;+		(comment "packagename")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot chef_2stars
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot roomPrice
		(type INSTANCE)
;+		(allowed-classes Price)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot hotel_rated
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot total_rating
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cost
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot hotel
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot checkIn
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot staff_rating
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot hotel_contract
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot room_staff_rating
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3AJADE-PROPERTIES-GENERATE-BEANS
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot hotels
		(type INSTANCE)
;+		(allowed-classes HotelInformation)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(multislot resolvers
		(type SYMBOL)
;+		(allowed-parents AID)
		(create-accessor read-write))
	(single-slot hotel_name
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3ALOCATION
;+		(comment "The location to store files into")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot recepcionist_experienced
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot rating
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3AJADE-PROPERTIES-DIRECTORY
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AJADE-UNNAMED-SLOT
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 1 1)
;+		(associated-facet SimpleJADEAbstractOntology_00016)
		(create-accessor read-write))
	(single-slot hotelAgent
		(type INSTANCE)
;+		(allowed-classes AID)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot recepcionist_novice
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot days
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot price_rating
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot stay
		(type INSTANCE)
;+		(allowed-classes Stay)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3AJADE-JAVA-CODE
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AJADE-IGNORE
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot startDay
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot bookingOffer
		(type INSTANCE)
;+		(allowed-classes Price)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot %3AJADE-INCLUDED-PROPERTIES
		(type INSTANCE)
;+		(allowed-classes)
		(create-accessor read-write))
	(single-slot chef_1stars
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot id_account
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot dayEvent
		(type INSTANCE)
;+		(allowed-classes DayEvent)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot chef_3stars
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3AJADE-PROPERTIES-PACKAGE
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot amount
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3AJADE-PROPERTIES-GENERATE-ONTOLOGY
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default TRUE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot hotel_rating
		(type INSTANCE)
;+		(allowed-classes)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot num_clients
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cleanliness_rating
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot addresses
		(type STRING)
		(create-accessor read-write))
	(single-slot balance
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3AJADE-JAVA-BASE-CLASS
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot chef_rating
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot day
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AJADE-PROPERTIES-NAME
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot ratings
		(type INSTANCE)
;+		(allowed-classes Rating)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot name_
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3AJADE-PROPERTIES-COMPATIBILITY
		(type SYMBOL)
		(allowed-values J2ME JavaBeans Classes)
		(default Classes)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot money
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3AONTOLOGYNAME
;+		(comment "name of the ontology")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot roomsAvailable
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AJADE-NAME
		(type STRING)
;+		(cardinality 0 1)
;+		(associated-facet SimpleJADEAbstractOntology_00014)
		(create-accessor read-write)))

(defclass %3AJADE-CLASS
	(is-a %3ASTANDARD-CLASS)
	(role concrete)
	(single-slot %3AJADE-JAVA-CODE
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AJADE-IGNORE
		(type SYMBOL)
		(allowed-values FALSE TRUE)
		(default FALSE)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AJADE-JAVA-BASE-CLASS
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3AJADE-NAME
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3AJADE-SLOT
	(is-a %3ASTANDARD-SLOT)
	(role concrete)
	(single-slot %3AJADE-UNNAMED-SLOT
		(type SYMBOL)
		(allowed-values FALSE TRUE)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot %3AJADE-NAME
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass %3APROJECT-ANNOTATION
	(is-a %3AANNOTATION)
	(role concrete)
	(single-slot %3AONTOLOGYNAME
;+		(comment "name of the ontology")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ALOCATION
;+		(comment "The location to store files into")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3ASUPPORT
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot %3APACKAGE
;+		(comment "packagename")
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Concept "The common ancestor for all concepts (i.e. types of entity such as Person, Address...) in an ontology"
	(is-a USER)
	(role abstract))

(defclass Account
	(is-a Concept)
	(role concrete)
	(single-slot balance
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot hotel
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot id_account
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass AgentAction "The common ancestor for all actions in an ontology (e.g. Sell, Buy...)"
	(is-a Concept)
	(role abstract))

(defclass RateHotel
	(is-a AgentAction)
	(role concrete)
	(single-slot ratings
		(type INSTANCE)
;+		(allowed-classes Rating)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot hotel
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass BookRoom
	(is-a AgentAction)
	(role concrete)
	(single-slot stay
		(type INSTANCE)
;+		(allowed-classes Stay)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot price
		(type INSTANCE)
;+		(allowed-classes Price)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass CreateAccountRequest
	(is-a AgentAction)
	(role concrete)
	(single-slot hotel
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass EndSimulation
	(is-a AgentAction)
	(role concrete))

(defclass RegistrationRequest
	(is-a AgentAction)
	(role concrete)
	(single-slot hotel
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SignContract
	(is-a AgentAction)
	(role concrete)
	(single-slot hotel
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot contract
		(type INSTANCE)
;+		(allowed-classes Contract)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SubscribeToDayEvent
	(is-a AgentAction)
	(role concrete))

(defclass ChargeAccount
	(is-a AgentAction)
	(role concrete)
	(single-slot money
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot hotel
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass ConsultAccountStatus
	(is-a AgentAction)
	(role concrete)
	(single-slot hotel
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass MakeDeposit
	(is-a AgentAction)
	(role concrete)
	(single-slot money
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot hotel
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass AccountStatusQueryRef
	(is-a AgentAction)
	(role concrete)
	(single-slot id_account
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass GetFinanceReport
	(is-a AgentAction)
	(role concrete))

(defclass AID
	(is-a Concept)
	(role concrete)
	(multislot addresses
		(type STRING)
		(create-accessor read-write))
	(single-slot name_
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot resolvers
		(type SYMBOL)
;+		(allowed-parents AID)
		(create-accessor read-write)))

(defclass Hotel
	(is-a Concept)
	(role concrete)
	(single-slot hotelAgent
		(type INSTANCE)
;+		(allowed-classes AID)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot hotel_name
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Price
	(is-a Concept)
	(role concrete)
	(single-slot amount
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Rating
	(is-a Concept)
	(role concrete)
	(single-slot chef_rating
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot price_rating
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot cleanliness_rating
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot room_staff_rating
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Contract "Describes the total employees to be hired (or actually hired) of each staff category."
	(is-a Concept)
	(role concrete)
	(single-slot chef_3stars
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot recepcionist_experienced
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot day
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot room_service_staff
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot chef_2stars
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot chef_1stars
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot recepcionist_novice
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Stay
	(is-a Concept)
	(role concrete)
	(single-slot checkOut
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot checkIn
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass RoomHotelInfo
	(is-a Concept)
	(role concrete)
	(single-slot cost
		(type FLOAT)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot roomsAvailable
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass DayEvent
	(is-a Concept)
	(role concrete)
	(single-slot day
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Predicate "The common ancestor for all predicates in an ontology (e.g. FatherOf...)"
	(is-a USER)
	(role abstract))

(defclass NotificationDayEvent
	(is-a Predicate)
	(role concrete)
	(single-slot dayEvent
		(type INSTANCE)
;+		(allowed-classes DayEvent)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass AccountStatus
	(is-a Predicate)
	(role concrete)
	(single-slot account
		(type INSTANCE)
;+		(allowed-classes Account)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass NumberOfClients
	(is-a Predicate)
	(role concrete)
	(single-slot num_clients
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass BookingOffer
	(is-a Predicate)
	(role concrete)
	(single-slot roomPrice
		(type INSTANCE)
;+		(allowed-classes Price)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass HotelInformation
	(is-a Predicate)
	(role concrete)
	(single-slot rating
		(type FLOAT)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot hotel
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass NotificationEndSimulation
	(is-a Predicate)
	(role concrete))

(defclass StayQueryRef
	(is-a Predicate)
	(role concrete)
	(single-slot stay
		(type INSTANCE)
;+		(allowed-classes Stay)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass NumberOfClientsQueryRef
	(is-a Predicate)
	(role concrete)
	(single-slot day
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass HotelStaffQueryRef
	(is-a Predicate)
	(role concrete)
	(single-slot day
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot hotel
		(type INSTANCE)
;+		(allowed-classes Hotel)
;+		(cardinality 0 1)
		(create-accessor read-write)))